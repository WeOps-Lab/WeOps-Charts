apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
{{ toYaml .Values.labels | indent 8 }}
      name: {{ .Chart.Name }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/port: '8080'
        prometheus.io/path: '/metrics'
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: {{.Values.image}}
          imagePullPolicy: IfNotPresent
          args:
            - "--housekeeping_interval=30s"
            - "--docker_only=true"
            - "--disable_metrics=accelerator,advtcp,app,cpu,cpuLoad,cpu_topology,cpuset,disk,diskIO,hugetlb,memory,memory_numa,network,oom_event,percpu,perf_event,process,referenced_memory,resctrl,sched,tcp,udp"
            - "--enable_metrics=cpu,cpuLoad,network,disk,diskIO,memory"
          volumeMounts:
            - name: rootfs
              mountPath: /rootfs
            - name: var-run
              mountPath: /var/run
            - name: sys
              mountPath: /sys
            {{ if eq .Values.container_runtime "containerd" }}- name: containerd
              mountPath: /var/lib/containerd{{ else }}- name: docker
              mountPath: /var/lib/docker{{ end }}
            - name: disk
              mountPath: /dev/disk
      volumes:
        - name: rootfs
          hostPath:
            path: /
        - name: var-run
          hostPath:
            path: /var/run
        - name: sys
          hostPath:
            path: /sys
        {{ if eq .Values.container_runtime "containerd" }}- name: containerd
          hostPath:
            path: /var/lib/containerd{{ else }}- name: docker
          hostPath:
            path: /var/lib/docker{{ end }}
        - name: disk
          hostPath:
            path: /dev/disk              
